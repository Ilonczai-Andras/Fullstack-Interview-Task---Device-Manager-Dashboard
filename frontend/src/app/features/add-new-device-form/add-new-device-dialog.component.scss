.card {
  margin: 1rem;

  // Button styling
  p-button {
    ::ng-deep .p-button {
      border: none;
      border-radius: 8px;
      padding: 0.75rem 1.5rem;
      font-weight: 600;
      transition: all 0.3s ease;

      &:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
      }

      &:active {
        transform: translateY(0);
      }
    }
  }
}


::ng-deep .p-dialog {
  border-radius: 16px;
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  overflow: hidden;
  // Ensure dialog is above all other elements
  z-index: 1100 !important;

  .p-dialog-header {
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    border-bottom: 1px solid #e2e8f0;
    padding: 1.5rem 2rem;

    .dialog-header {
      width: 100%;

      .dialog-title {
        font-size: 1.25rem;
        font-weight: 700;
        color: #1e293b;
        display: flex;
        align-items: center;

        &::before {
          content: "üñ•Ô∏è";
          margin-right: 0.5rem;
          font-size: 1.1rem;
        }
      }
    }
  }

  .p-dialog-content {
    padding: 2rem;
    background: #ffffff;
  }

  .p-dialog-footer {
    background: #f8fafc;
    border-top: 1px solid #e2e8f0;
    padding: 1.25rem 2rem;
    display: flex;
    justify-content: flex-end;
    gap: 0.75rem;
  }
}

// Ensure dialog mask covers everything including pagination
::ng-deep .p-dialog-mask {
  z-index: 1099 !important;
  background-color: rgba(0, 0, 0, 0.6) !important;
}

// Hide pagination and other table elements when dialog is open
::ng-deep .p-dialog-mask-visible {
  // Hide pagination specifically
  ~ * .p-paginator,
  ~ * .p-datatable-paginator {
    visibility: hidden !important;
  }

  // Hide other potentially overlapping elements
  ~ * .p-dropdown-panel,
  ~ * .p-multiselect-panel,
  ~ * .p-calendar-panel {
    display: none !important;
  }
}

// Alternative approach: Hide pagination when body has dialog open class
body.p-overflow-hidden {
  .p-paginator,
  .p-datatable-paginator {
    visibility: hidden !important;
  }
}

// Form styling
.form-group {
  margin-bottom: 1.5rem;
  position: relative;

  .form-label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 600;
    color: #374151;
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .form-input {
    width: 100%;
    padding: 0.75rem 1rem;
    border: 2px solid #e5e7eb;
    border-radius: 8px;
    font-size: 0.875rem;
    transition: all 0.2s ease;
    background: #ffffff;

    &:focus {
      outline: none;
      border-color: #667eea;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
      transform: translateY(-1px);
    }

    &:hover {
      border-color: #d1d5db;
    }

    // Error state
    &.ng-invalid.ng-touched {
      border-color: #ef4444;
      box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);

      &:focus {
        border-color: #ef4444;
        box-shadow:
          0 0 0 3px rgba(239, 68, 68, 0.1),
          0 1px 3px rgba(0, 0, 0, 0.1);
      }
    }

    // Success state
    &.ng-valid.ng-touched {
      border-color: #10b981;

      &:focus {
        border-color: #10b981;
        box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.1);
      }
    }

    // Placeholder styling
    &::placeholder {
      color: #9ca3af;
      font-style: italic;
    }
  }

  // Error message styling
  .error-message {
    position: absolute;
    top: 100%;
    left: 0;
    margin-top: 0.25rem;
    font-size: 0.75rem;
    color: #ef4444;
    font-weight: 500;
    opacity: 0;
    transform: translateY(-0.25rem);
    transition: all 0.2s ease;

    // Show error message with animation
    &:not(:empty) {
      opacity: 1;
      transform: translateY(0);
    }
  }

  // Adjust margin when error message is present
  &:has(.error-message:not(:empty)) {
    margin-bottom: 2rem;
  }
}

// Footer button styling
::ng-deep .p-dialog-footer {
  .p-button {
    padding: 0.625rem 1.25rem;
    border-radius: 6px;
    font-weight: 600;
    font-size: 0.875rem;
    transition: all 0.2s ease;

    // Cancel button
    &.p-button-text {
      color: #6b7280;
      background: transparent;

      &:hover {
        background: #f3f4f6;
        color: #374151;
      }
    }

    // Save button
    &.p-button-outlined {
      border: 2px solid #667eea;
      color: #667eea;
      background: transparent;

      &:hover:not(:disabled) {
        background: #667eea;
        color: white;
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
      }

      &:disabled {
        opacity: 0.5;
        cursor: not-allowed;
        border-color: #d1d5db;
        color: #9ca3af;

        &:hover {
          background: transparent;
          transform: none;
          box-shadow: none;
        }
      }
    }
  }
}

// Animation enhancements
::ng-deep .p-dialog-enter {
  animation: dialogSlideIn 0.3s ease-out;
}

::ng-deep .p-dialog-exit {
  animation: dialogSlideOut 0.2s ease-in;
}

// Focus management
.form-input:focus-visible {
  outline: 2px solid #667eea;
  outline-offset: 2px;
}
